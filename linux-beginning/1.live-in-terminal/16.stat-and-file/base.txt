Введение в команды stat и file
Команда stat
stat — мощная команда в Linux, предназначенная для получения подробной информации о файлах и директориях. 
Она предоставляет метаданные, которые могут быть полезны для анализа состояния файлов, отладки проблем с правами доступа, и управления файлами в системе.

Основные параметры, отображаемые командой stat:
- Размер файла (Size): показывает размер файла в байтах.
- Блоки (Blocks): количество дисковых блоков, занимаемых файлом.
- Тип файла (File type): может быть обычный файл, директория, символическая ссылка и т.д.
- Узел (Inode): уникальный идентификатор файла в файловой системе.
- Количество ссылок (Links): количество ссылок на этот файл. Это показывает, сколько путей ведут к этому файлу.
- Права доступа (Access): отображает права доступа к файлу в числовом и символьном формате (например, 0644 или -rw-r--r--).
- UID и GID: идентификаторы владельца файла и группы.

Временные метки:
- Access (время последнего доступа): когда файл в последний раз читался.
- Modify (время последней модификации): когда данные в файле последний раз изменялись.
- Change (время последнего изменения атрибутов): когда изменялись атрибуты файла, например, права доступа или владелец.
- Birth (время создания): когда файл был создан (этот параметр поддерживается не всеми файловыми системами).
- Эти параметры позволяют глубоко проанализировать текущий статус файла или директории, что особенно полезно при поиске причин ошибок в работе программ, анализе доступа к файлам и управлении файлами на сервере.

Примеры использования stat:

Просмотр метаданных файла:
stat document.txt
Это отобразит полные метаданные файла document.txt, включая время последнего доступа, модификации, права и многое другое.

Форматирование вывода:
stat -c "%n: %s bytes, last accessed on %x" document.txt
Эта команда выводит имя файла, его размер в байтах и дату последнего доступа.

Команда file
file — утилита, которая анализирует содержимое файла, чтобы определить его тип, а не полагается на расширение файла. 
Это особенно важно, поскольку в Unix-подобных системах расширения файлов не всегда указывают на их содержание.

Типы, определяемые file:
- Текстовые файлы: например, ASCII text, UTF-8 text.
- Исполняемые файлы: ELF binary, которые включают программы, скомпилированные для выполнения в системе.
- Сжатые файлы: такие как gzip, bzip2, zip, tar и другие.
- Медиа-файлы: например, JPEG image, PNG image, MP4 video.

Примеры использования file:

Определение типа файла:
file image.png
Вывод покажет, например: image.png: PNG image data, 800 x 600, 8-bit/color RGBA, non-interlaced.

Определение MIME-типа:
file -i document.pdf
Вывод может быть: document.pdf: application/pdf; charset=binary.

Практическое применение
Анализ файлов на сервере: С помощью stat можно проверить доступность и правильность прав файлов конфигурации.
Диагностика проблем с правами: Если программа не может получить доступ к файлу, stat поможет выяснить, какие права установлены и кто владелец.
Определение типа файла: file помогает узнать, чем является файл, что полезно, когда расширение файла отсутствует или введено неверно.
