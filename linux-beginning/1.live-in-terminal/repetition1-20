1. ls-and-history(wadd)
Выведите список всех файлов и директорий в текущей директории.
Используйте команду ls для отображения подробной информации о файлах.
Просмотрите 5 последних введённых команд с помощью history.
Очистите историю команд с помощью history -c.
Используйте ls -a для отображения скрытых файлов и директорий.
2. wc
Подсчитайте количество строк в файле file.txt.
Подсчитайте количество слов и символов в файле document.txt.
Выведите количество строк, слов и байтов в нескольких файлах одновременно.
Используйте команду wc -l для подсчёта строк в стандартном выводе команды ls.
Найдите файл с максимальным количеством строк с помощью wc и sort.
3. pipe
Используйте конвейер, чтобы отфильтровать строки файла через команду grep.
Передайте вывод команды ls в команду wc для подсчёта количества файлов.
Используйте cat и grep в конвейере для поиска строки в файле и подсчёта результатов.
Используйте команду ps и grep для поиска процесса по имени.
Примените несколько команд через конвейер: ls | grep .txt | sort.
4. grep
Найдите все строки, содержащие слово "error" в файле лога.
Используйте grep -i для поиска строк без учета регистра.
Найдите строки, которые не содержат слово "success".
Поиск строки с регулярным выражением, используя grep.
Используйте grep -r для поиска текста во всех файлах директории рекурсивно.
5. echo-and-redirection
Выведите текст "Hello, World!" с помощью команды echo.
Перенаправьте вывод команды echo в файл output.txt.
Добавьте текст в существующий файл с помощью >>.
Используйте echo для вывода переменной окружения.
Перенаправьте вывод команды в файл и одновременно выведите его на экран с помощью tee.
6. echo-and-var
Создайте переменную с именем name и присвойте ей значение.
Выведите значение переменной name на экран.
Используйте команду echo для вывода значения переменной и текста одновременно.
Перенаправьте значение переменной в файл.
Измените значение переменной и выведите новое значение с помощью echo.
7. mkdir-and-rmdir
Создайте новую директорию new_folder.
Удалите пустую директорию old_folder.
Создайте несколько директорий с помощью команды mkdir.
Создайте вложенные директории с помощью mkdir -p.
Удалите несколько пустых директорий одновременно с помощью команды rmdir.
8. cp-and-mv
Скопируйте файл file1.txt в директорию backup/.
Переместите файл document.txt в новую директорию.
Скопируйте директорию и её содержимое с помощью cp -r.
Переименуйте файл с помощью команды mv.
Переместите несколько файлов в одну директорию за один раз.
9. cat-and-more
Просмотрите содержимое файла с помощью команды cat.
Объедините содержимое двух файлов с помощью команды cat.
Используйте команду more для постраничного просмотра длинного файла.
Просмотрите несколько файлов одновременно с помощью cat.
Используйте more для вывода текста и перемещения по нему с помощью пробела.
10. head-and-tail
Выведите первые 10 строк файла с помощью команды head.
Отобразите последние 5 строк файла с помощью команды tail.
Используйте head для вывода первых 20 строк нескольких файлов.
Выведите последние строки файла в режиме реального времени с помощью tail -f.
Используйте tail -n для вывода определённого количества строк с конца файла.
11. chmod-and-chown
Измените права доступа к файлу, сделав его исполняемым.
Установите права доступа на чтение и запись для владельца и группы.
Измените владельца файла на другого пользователя с помощью chown.
Измените группу для файла с помощью команды chown.
Сделайте файл доступным для выполнения только владельцем.
12. find-and-locate
Найдите все файлы с расширением .txt в текущей директории с помощью find.
Найдите файл по имени в указанной директории.
Используйте locate для поиска файла по частичному имени.
Найдите все файлы, изменённые за последние 7 дней.
Найдите и удалите файлы с нулевым размером.
13. vi-and-vim
Откройте файл с помощью редактора vi.
Вставьте текст в файл и сохраните изменения в vi.
Переключитесь между режимами редактирования и команд в vim.
Найдите текст в файле с помощью команды поиска в vim.
Сохраните и выйдите из редактора с помощью команды :wq.
14. useradd-and-groupadd
Создайте нового пользователя с помощью команды useradd.
Удалите существующего пользователя из системы.
Добавьте пользователя в группу с помощью команды usermod.
Создайте новую группу с помощью groupadd.
Просмотрите информацию о существующих пользователях с помощью команды getent passwd.
15. chattr-and-lsattr
Измените атрибут файла, чтобы сделать его неизменяемым с помощью chattr +i.
Снимите неизменяемость файла с помощью chattr -i.
Просмотрите атрибуты файла с помощью команды lsattr.
Сделайте файл доступным только для добавления данных с помощью chattr +a.
Узнайте, какие атрибуты установлены для всех файлов в директории с помощью lsattr.
16. stat-and-file
Просмотрите подробную информацию о файле с помощью команды stat.
Узнайте тип файла с помощью команды file.
Просмотрите права доступа и время последнего изменения файла с помощью stat.
Определите тип файла (текстовый или бинарный) с помощью команды file.
Найдите время последнего доступа к файлу с помощью stat.
17. which-type-whereis
Узнайте полный путь к исполняемому файлу команды bash с помощью which.
Определите, является ли команда алиасом с помощью type.
Найдите расположение исполняемого файла и его документации с помощью whereis.
Узнайте путь к исполняемому файлу команды grep.
Определите тип команды ls (встроенная команда или исполняемый файл).
18. cut-and-paste
Извлеките первые три поля из файла с помощью команды cut.
Объедините два файла построчно с помощью команды paste.
Используйте cut для извлечения определённых символов из строки.
Извлеките данные из файла с разделителем : с помощью cut -d.
Используйте paste для объединения данных из двух файлов с табуляцией.
19. awk
Выведите второе поле каждой строки файла с помощью awk.
Подсчитайте количество строк в файле с помощью awk.
Используйте awk для фильтрации строк по условию.
Найдите сумму чисел в столбце файла с помощью команды awk.
Используйте awk для обработки вывода команды df и вывода только файловых систем.
20. less-tail-head
Используйте less для постраничного просмотра длинного файла.
Выведите первые 10 строк файла с помощью команды head.
Просмотрите последние строки файла в реальном времени с помощью tail -f.
Используйте less для просмотра вывода команды dmesg.
Перемещайтесь по файлу в режиме less с помощью клавиш Page Up и Page Down.
