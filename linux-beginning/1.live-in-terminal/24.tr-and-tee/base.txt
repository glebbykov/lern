Введение

Команды `tr` и `tee` являются основными инструментами для обработки текстовых данных в Linux. Эти команды позволяют изменять и передавать данные между процессами, что делает их незаменимыми при автоматизации работы с текстовыми файлами и другими потоками ввода/вывода.

Команда `tr`

Команда `tr` используется для преобразования, удаления и замены символов из потока ввода, позволяя гибко управлять текстовыми данными. Она применяется для различных преобразований в текстовых файлах, таких как:

- **Сжатие последовательностей символов**: `tr -s` позволяет сократить последовательности одинаковых символов до одного экземпляра, что удобно для удаления лишних пробелов или других повторяющихся символов.
- **Удаление символов**: С помощью `tr -d` можно удалить определенные символы из текста, избавляясь от ненужных пунктуационных знаков и специальных символов.
- **Замена регистра символов**: С использованием классов символов `[:lower:]` и `[:upper:]` команда `tr` легко преобразует все символы текста в верхний или нижний регистр.
- **Перевод символов**: Команда `tr` может заменить один набор символов другим, что полезно для стандартизации текста или замены отдельных символов.

#### Примеры использования

1. **Замена пробелов на подчеркивания**:
   ```bash
   echo "hello world" | tr ' ' '_'
   ```

2. **Разделение слов по строкам, удаление пунктуации и перевод в верхний регистр**:
   Комбинация команд `tr` может помочь с форматированием текста, как показано ниже:
   
   ```bash
   echo "Hello, world! Welcome to text processing." | tr -s ' ' '
' | tr -d '.,:;' | tr '[:lower:]' '[:upper:]'
   ```

   Эта команда выполняет следующие шаги:
   - `tr -s ' ' '
'` сокращает все последовательные пробелы до одного и заменяет его на символ новой строки (`
`), что позволяет разделить слова в тексте на строки.
   - `tr -d '.,:;'` удаляет символы `.` (точка), `,` (запятая), `:` (двоеточие) и `;` (точка с запятой), очищая текст от пунктуации.
   - `tr '[:lower:]' '[:upper:]'` переводит все символы нижнего регистра в верхний, чтобы получить текст в заглавном регистре.

   Результат выполнения этой команды:
   ```
   HELLO
   WORLD
   WELCOME
   TO
   TEXT
   PROCESSING
   ```

### Команда `tee`

Команда `tee` читает данные из стандартного ввода и отправляет их одновременно на стандартный вывод и в один или несколько файлов. Это полезно, если вы хотите сохранить вывод команды в файл, при этом продолжая видеть результат на экране.

Основные функции:
- Запись данных одновременно в несколько файлов и на стандартный вывод
- Дополнение файлов (опция `-a`)

Пример: сохранение вывода команды `ls` в файл `output.txt` и одновременный вывод на экран:
```bash
ls | tee output.txt
```